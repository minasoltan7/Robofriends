{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","containers/App.js","components/reportWebVitals.js","index.js"],"names":["Card","props","name","id","email","className","alt","src","Cardlist","robots","cardArrays","map","user","i","SearchBox","searchChange","placeholder","onChange","type","Scroll","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAgBeA,EAdF,SAACC,GAAW,IACbC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,GAAIC,EAAUH,EAAVG,MAClB,OAEI,sBAAMC,UAAU,+CAAhB,UAEI,qBAAKC,IAAI,QAAQC,IAAG,mCAA8BJ,EAA9B,cACpB,oBAAIE,UAAU,MAAd,SAAqBH,IACrB,mBAAGG,UAAU,MAAb,SAAoBD,QCWjBI,EAlBE,SAACP,GAAW,IACjBQ,EAAWR,EAAXQ,OACFC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACjC,OACI,cAAC,EAAD,CACIX,KAAMO,EAAOI,GAAGX,KAChBC,GAAIM,EAAOI,GAAGV,GACdC,MAAOK,EAAOI,GAAGT,OAHVS,MAOnB,OACI,8BACKH,KCFEI,EAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,8BACI,uBACIV,UAAU,kDACVW,YAAY,eACZC,SAAUF,EACVG,KAAK,cCDNC,G,YANA,SAAClB,GACZ,OAAO,qBAAKI,UAAU,cAAf,SACFJ,EAAMmB,aCmDAC,E,kDA/CX,aAAe,IAAD,8BACV,gBAkBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAlB1C,EAAKC,MAAQ,CACTnB,OAAQ,GACRgB,YAAa,KAJP,E,qDASd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKT,SAAS,CAAEf,OAAQwB,S,oBAQpC,WAAU,IAAD,EAC2BC,KAAKN,MAA7BnB,EADH,EACGA,OAAQgB,EADX,EACWA,YACVU,EAAiB1B,EAAO2B,QAAO,SAACC,GAClC,OAAQA,EAAMnC,KAAKoC,cAAcC,SAASd,EAAYa,kBAI1D,OAAK7B,EAAO+B,OAKJ,sBAAKnC,UAAU,KAAf,UACI,oBAAIA,UAAU,SAAd,yBACA,cAAC,EAAD,CAAWU,aAAcmB,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUb,OAAQ0B,SARvB,oBAAI9B,UAAU,KAAd,yB,GAjCDoC,aCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCIdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9127b83d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const { name, id, email } = props\r\n    return (\r\n\r\n        < div className='bg-purple dib br2 pa2 ma2 grow bw1  shadow-5' >\r\n\r\n            <img alt='robot' src={`https://www.robohash.org/${id}?200x200`} />\r\n            <h2 className='tc '>{name}</h2>\r\n            <p className='tc '>{email}</p>\r\n\r\n        </ div >\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst Cardlist = (props) => {\r\n    const { robots } = props;\r\n    const cardArrays = robots.map((user, i) => {\r\n        return (\r\n            <Card key={i}\r\n                name={robots[i].name}\r\n                id={robots[i].id}\r\n                email={robots[i].email} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {cardArrays}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div  >\r\n            <input\r\n                className='pa3 ba bg-lightest-blue ma3  br4 bw1 b-green tc'\r\n                placeholder=\"Search Robot\"\r\n                onChange={searchChange}\r\n                type='Search'\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBox;\r\n\r\n","import React from 'react';\r\nimport './Scroll.css'\r\nconst Scroll = (props) => {\r\n    return <div className=\"scrollStyle\" >\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll.js'\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: \" \"\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(users => {\r\n                this.setState({ robots: users })\r\n            })\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter((robot) => {\r\n            return (robot.name.toLowerCase().includes(searchfield.toLowerCase()))\r\n        })\r\n\r\n        // clean code than : if(robots.lengths===0)\r\n        if (!robots.length) {\r\n            return <h1 className='tc'>Loading</h1>\r\n        }\r\n        else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1 ma3'>Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <Cardlist robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App.js';\r\nimport 'tachyons';\r\nimport reportWebVitals from './components/reportWebVitals';\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}